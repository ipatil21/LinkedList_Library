/// @brief#pragma once/// @brief#include "../inc/ILinkedList.h"/// @brief#include "../inc/SinglyLLNode.h"/// @briefclass Singly: public ILinkedList, public SinglyLLNode{public:    /// @brief    Singly();    /// @brief    ~Singly();    /// @brief    /// @param iData    /// @return    bool InsertAtFirst(int iData) override;    /// @brief    /// @param iData    /// @return    bool InsertAtLast(int iData) override;    /// @brief    /// @param iData    /// @param iPos    /// @return    bool InsertAtPosition(int iData, int iPos) override;    /// @brief    /// @return    bool DeleteAtFirst() override;    /// @brief    /// @param iPos    /// @return    bool DeleteAtPosition(int iPos) override;    /// @brief    /// @return    bool DeleteAtLast() override;    /// @brief    /// @return    bool DeleteAll() override;    /// @brief    /// @return    int SearchData(int iData) override;    /// @brief    /// @return    bool IsListEmpty() override;    /// @brief    /// @return    string DisplayListData() override;    /// @brief    /// @return    unsigned int CountNodes() override;    /// @brief    /// @param m_pSecond    /// @return    SinglyLLNode* ConcatList(SinglyLLNode* m_pSecond) override;    /// @brief    /// @param m_pSecond    /// @param iPos    /// @return    SinglyLLNode* ConcatAtPosition(SinglyLLNode* m_pSecond, int iPos) override;    /// @brief    /// @return    void ReverseDisplay() override;    /// @brief    /// @return    SinglyLLNode* ReversePhysical() override;private:    /// @brief    SinglyLLNode* m_pFirst;    /// @brief    unsigned int m_iData;    /// @brief    unsigned int m_iNodeCount;    /// @brief    /// @return    bool IncrementNodeCount();    /// @brief    /// @return    bool DecrementNodeCount();};